<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:rdb="http://www.dangdang.com/schema/ddframe/rdb"
	xsi:schemaLocation="
		 http://www.springframework.org/schema/beans 
		 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		 http://www.springframework.org/schema/context 
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd
		 http://www.springframework.org/schema/tx 
		 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		 http://www.springframework.org/schema/mvc
		 http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		 http://www.springframework.org/schema/aop
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		 http://www.dangdang.com/schema/ddframe/rdb 
		 http://www.dangdang.com/schema/ddframe/rdb/rdb.xsd">
	
	<import resource="classpath*:/sharding-jdbc.xml"/>
	<import resource="classpath*:/dubbo-provider.xml" />
	<import resource="classpath*:/elastic-job.xml" />

	<!-- 激活spring的注解. -->
	<context:annotation-config />
	
	<!-- 扫描注解组件并且自动的注入spring beans中. 例如,他会扫描@Controller 和@Service下的文件.所以确保此base-package设置正确. -->
	<context:component-scan base-package="com" />
	
	<!-- 静态数据源配置 -->
<!-- 	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> -->
<!-- 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property> -->
<!-- 		<property name="url" value="jdbc:oracle:thin:@192.168.65.105:1521:KFSB2DB"></property> -->
<!-- 		<property name="username" value="test"></property> -->
<!-- 		<property name="password" value="test"></property> -->
<!-- 		<property name="maxIdle" value="10"></property> -->
<!-- 		<property name="minIdle" value="3"></property> -->
<!-- 		<property name="maxActive" value="10"></property> -->
<!-- 		<property name="initialSize" value="5"></property> -->
<!-- 	</bean> -->
	
	<!-- 基于TDDL的动态数据源配置 -->
<!-- 	<bean id="dataSource" class="com.taobao.tddl.jdbc.group.TGroupDataSource" init-method="init"> -->
<!-- 		<property name="appName" value="tddl_SMT"></property> -->
<!-- 		<property name="dbGroupKey" value="group_SMT"></property> -->
<!-- 	</bean>  -->
	
	<!-- 事务管理器配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="shardingDataSource" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="shardingDataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- orm框架配置 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.demo.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	
	<!-- 静态文件处理 -->
	<mvc:default-servlet-handler />
	
	<!-- 定义首页 -->
	<mvc:view-controller path="/" view-name="redirect:/toIndex.do"/>

	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/page/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	
	<!-- disconf配置 -->
	<bean id="disconfMgrBean" class="com.baidu.disconf.client.DisconfMgrBean" destroy-method="destroy">
		<property name="scanPackage" value="com"/>
	</bean>
	<bean id="disconfMgrBean2" class="com.baidu.disconf.client.DisconfMgrBeanSecond" init-method="init" destroy-method="destroy"></bean>
	
	<!-- 支持cglib的aop -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	
	<!-- druid 和 spring 的关联监控 -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
	
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
			scope="prototype">
		<property name="patterns">
		<list>
			<value>com.demo.api.*</value>
		</list>
		</property>
	</bean>
	
	<aop:config>
		<aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
</beans>
